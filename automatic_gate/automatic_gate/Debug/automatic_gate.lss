
automatic_gate.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000013c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000190  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  0000085c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  000008e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000004f1  00000000  00000000  00000968  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000010f  00000000  00000000  00000e59  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000037a  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  000012e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000010a  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001b0  00000000  00000000  00001412  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e3       	ldi	r30, 0x3C	; 60
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 9c 00 	jmp	0x138	; 0x138 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#define F_CPU 16000000
#include<avr/io.h>
#include<util/delay.h> //COM15
int main(void)
{
	DDRC=0b00000000;
  92:	14 ba       	out	0x14, r1	; 20
	DDRB=0b11111111;
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	87 bb       	out	0x17, r24	; 23
	PORTC=0XFF;
  98:	85 bb       	out	0x15, r24	; 21
	while(1)
	{
		if(bit_is_clear(PINC,0)) 
		{
			PORTB=0b00000010;
  9a:	82 e0       	ldi	r24, 0x02	; 2
		}
		
		
		else if(bit_is_clear(PINC,2))
		{
		PORTB=0b00000001;
  9c:	91 e0       	ldi	r25, 0x01	; 1
	DDRC=0b00000000;
	DDRB=0b11111111;
	PORTC=0XFF;
	while(1)
	{
		if(bit_is_clear(PINC,0)) 
  9e:	98 99       	sbic	0x13, 0	; 19
  a0:	15 c0       	rjmp	.+42     	; 0xcc <main+0x3a>
		{
			PORTB=0b00000010;
  a2:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a4:	2f ef       	ldi	r18, 0xFF	; 255
  a6:	39 ef       	ldi	r19, 0xF9	; 249
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	21 50       	subi	r18, 0x01	; 1
  ac:	30 40       	sbci	r19, 0x00	; 0
  ae:	40 40       	sbci	r20, 0x00	; 0
  b0:	e1 f7       	brne	.-8      	; 0xaa <main+0x18>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <main+0x22>
  b4:	00 00       	nop
			_delay_ms(20) ;
			PORTB=0b00000000;
  b6:	18 ba       	out	0x18, r1	; 24
  b8:	2f ef       	ldi	r18, 0xFF	; 255
  ba:	3f e4       	ldi	r19, 0x4F	; 79
  bc:	43 ec       	ldi	r20, 0xC3	; 195
  be:	21 50       	subi	r18, 0x01	; 1
  c0:	30 40       	sbci	r19, 0x00	; 0
  c2:	40 40       	sbci	r20, 0x00	; 0
  c4:	e1 f7       	brne	.-8      	; 0xbe <main+0x2c>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x36>
  c8:	00 00       	nop
  ca:	e9 cf       	rjmp	.-46     	; 0x9e <main+0xc>
			_delay_ms(4000) ;
		
			
		}
		else if(bit_is_clear(PINC,1)) 
  cc:	99 99       	sbic	0x13, 1	; 19
  ce:	15 c0       	rjmp	.+42     	; 0xfa <main+0x68>
		{
		PORTB=0b00000010;
  d0:	88 bb       	out	0x18, r24	; 24
  d2:	2f ef       	ldi	r18, 0xFF	; 255
  d4:	39 ef       	ldi	r19, 0xF9	; 249
  d6:	40 e0       	ldi	r20, 0x00	; 0
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	30 40       	sbci	r19, 0x00	; 0
  dc:	40 40       	sbci	r20, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <main+0x46>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x50>
  e2:	00 00       	nop
		_delay_ms(20) ;
		PORTB=0b00000000;
  e4:	18 ba       	out	0x18, r1	; 24
  e6:	2f ef       	ldi	r18, 0xFF	; 255
  e8:	3f e4       	ldi	r19, 0x4F	; 79
  ea:	43 ec       	ldi	r20, 0xC3	; 195
  ec:	21 50       	subi	r18, 0x01	; 1
  ee:	30 40       	sbci	r19, 0x00	; 0
  f0:	40 40       	sbci	r20, 0x00	; 0
  f2:	e1 f7       	brne	.-8      	; 0xec <main+0x5a>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x64>
  f6:	00 00       	nop
  f8:	d2 cf       	rjmp	.-92     	; 0x9e <main+0xc>
		_delay_ms(4000) ;
		}
		
		
		else if(bit_is_clear(PINC,2))
  fa:	9a 99       	sbic	0x13, 2	; 19
  fc:	15 c0       	rjmp	.+42     	; 0x128 <main+0x96>
		{
		PORTB=0b00000001;
  fe:	98 bb       	out	0x18, r25	; 24
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	33 ef       	ldi	r19, 0xF3	; 243
 104:	41 e0       	ldi	r20, 0x01	; 1
 106:	21 50       	subi	r18, 0x01	; 1
 108:	30 40       	sbci	r19, 0x00	; 0
 10a:	40 40       	sbci	r20, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x74>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x7e>
 110:	00 00       	nop
		_delay_ms(40) ;
		PORTB=0b00000000;
 112:	18 ba       	out	0x18, r1	; 24
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	3f e4       	ldi	r19, 0x4F	; 79
 118:	43 ec       	ldi	r20, 0xC3	; 195
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	30 40       	sbci	r19, 0x00	; 0
 11e:	40 40       	sbci	r20, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x88>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x92>
 124:	00 00       	nop
 126:	bb cf       	rjmp	.-138    	; 0x9e <main+0xc>
		_delay_ms(4000) ;
		}
		
		else if((bit_is_set(PINC,0)) && (bit_is_set(PINC,1)) && (bit_is_set(PINC,2)))
 128:	98 9b       	sbis	0x13, 0	; 19
 12a:	b9 cf       	rjmp	.-142    	; 0x9e <main+0xc>
 12c:	99 9b       	sbis	0x13, 1	; 19
 12e:	b7 cf       	rjmp	.-146    	; 0x9e <main+0xc>
 130:	9a 9b       	sbis	0x13, 2	; 19
 132:	b5 cf       	rjmp	.-150    	; 0x9e <main+0xc>
		PORTB=0x00;
 134:	18 ba       	out	0x18, r1	; 24
 136:	b3 cf       	rjmp	.-154    	; 0x9e <main+0xc>

00000138 <_exit>:
 138:	f8 94       	cli

0000013a <__stop_program>:
 13a:	ff cf       	rjmp	.-2      	; 0x13a <__stop_program>
